<%- include('includes/header', { title: userDetails.username }) %>
<style>
    .truncate-text {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #chat-con::-webkit-scrollbar {
        width: 2px; 
    }
    #chat-con::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    #chat-con::-webkit-scrollbar-thumb {
        background: #888; 
        border-radius: 4px; 
    }
    #chat-con::-webkit-scrollbar-thumb:hover {
        background: #555; 
    }
</style>

<section class="max-w-6xl mx-auto sm:mx-0 sm:ml-24">
    <div class="p-4 overflow-x-hidden">
        <div class="rounded-lg p-2 flex flex-col sm:space-x-6 mb-6">
            <div class="flex flex-col sm:flex-row">
                <div class="flex">
                    <div
                        class="w-16 h-16 rounded-full text-black flex justify-center items-center bg-red-500 font-bold text-lg mb-4 sm:mb-0">
                        <%= userDetails.fname[0] + userDetails.lname[0] %>
                    </div>
                    <div>
                        <h1 class="text-2xl font-bold" id="username">
                            <%= userDetails.username %>
                        </h1>
                    </div>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-center sm:space-x-4">
                    <% if(!isSame) { %>
                        <div class="flex space-x-2 mt-2 sm:mt-0">
                            <button class="px-4 py-2 bg-blue-500 text-white rounded-full" id="follow">
                                <% if (isFollowing) { %>
                                    Following
                                    <% } else { %>
                                        Follow
                                        <% } %>
                            </button>
                            <button class="px-4 py-2 bg-slate-500 text-black rounded-full" id="message">Message</button>
                            <button class="px-4 py-2 bg-gray-200 text-gray-800 rounded-full">...</button>
                        </div>
                        <% } else { %>
                            <div class="flex space-x-2 mt-2 sm:mt-0">
                                <button class="px-4 py-2 bg-blue-500 text-white rounded-full">
                                    Edit Profile
                                </button>
                                <button class="px-4 py-2 bg-slate-500 text-black rounded-full">Add Story</button>
                            </div>
                            <% } %>
                </div>
            </div>
            <div class="flex flex-col">
                <div class="flex space-x-3 sm:space-x-6 mt-2 text-sm sm:text-base ml-2">
                    <div>
                        <span class="font-bold" id="post_count">
                            <%= userDetails.Blogs.length %>
                        </span> posts
                    </div>
                    <div>
                        <% if (totalFollowers.length> 0) { %>
                            <a href="#" onclick="openModal(event)">
                                <span class="font-bold" id="total_followers">
                                    <%= totalFollowers.length %>
                                </span> followers
                            </a>
                            <% } else { %>
                                <span class="font-bold" id="total_followers">
                                    <%= totalFollowers.length %>
                                </span> followers
                                <% } %>
                    </div>
                    <div>
                        <% if (totalFollowing.length> 0) { %>
                            <a href="#" onclick="openFollowingModal(event)">
                                <span class="font-bold" id="total_following">
                                    <%= totalFollowing.length %>
                                </span> following
                            </a>
                            <% } else { %>
                                <span class="font-bold" id="total_following">
                                    <%= totalFollowing.length %>
                                </span> following
                                <% } %>
                    </div>
                </div>
            </div>
            <div class="mt-2 ml-2">
                <p class="font-semibold capitalize">
                    <%= userDetails.fname + ' ' + userDetails.lname %>
                </p>
                <p class="text-gray-500 text-xs sm:text-sm">Followed by laxmi_nigam90</p>
            </div>
        </div>
    </div>
    <div class="flex justify-center space-x-4 mb-6">
        <button class="text-gray-600 font-semibold uppercase">Posts</button>
    </div>
    </div>
    <div>
        <div class="flex flex-wrap">
            <div>
                <% userDetails.Blogs.forEach(blog=> { %>
                    <div class="w-full sm:w-3/5 bg-white p-2 border-b-solid border-b-[1px] border-b-slate-500 mt-2 main-blog">
                        <div class="mb-2 flex justify-between items-center gap-2">
                            <div class="flex items-center gap-2">
                                <div class="h-10 w-10 sm:h-12 sm:w-12 rounded-full bg-red-600 flex items-center justify-center text-white">
                                    <%= userDetails.fname.charAt(0).toUpperCase() + userDetails.lname.charAt(0).toUpperCase() %>
                                </div>
                                <div>
                                    <p class="text-black mb-4 font-bold text-lg">
                                        <%= userDetails.fname + ' ' + userDetails.lname %>
                                    </p>
                                </div>
                            </div>
                            <%if(isSame) {%>
                            <div class="relative">
                                <button onclick="toggleMenu(event, <%= blog.id %>)" class="text-gray-700">
                                    &#x22EE;
                                </button>
                                <div id="menu-<%= blog.id %>"
                                    class="absolute right-0 mt-2 w-48 bg-white border border-gray-300 rounded shadow-md hidden">
                                    <a href="/blog/edit-blog/<%=blog.id%>" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                                        >Edit</a>
                                    <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                                        onclick="deleteBlog(<%= blog.id %>,event)">Delete</a>
                                </div>
                            </div>
                            <%}%>
                        </div>
                        <h2 class="text-base sm:text-xl font-semibold mb-2">
                            <%= blog.title %>
                        </h2>
                        <% if (blog.coverImage) { %>
                            <div class="w-full flex justify-center mb-2 p-2">
                                <img src="/uploads/<%= blog.coverImage %>" alt="<%= blog.title %> Cover Image"
                                    class="w-full sm:w-[90%] h-auto rounded-md">
                            </div>
                            <% } %>
                                <div>
                                    <p class="text-gray-700 truncate-text" id="desc-<%= blog.id %>">
                                        <%= blog.body %>
                                    </p>
                                    <a href="javascript:void(0);" class="text-blue-500 hover:underline"
                                        onclick="toggleReadMore(<%= blog.id %>)" id="toggle-<%= blog.id %>">Read More
                                    </a>
                                </div>
                    </div>
                    
                    <% }) %>
            </div>
        </div>
    </div>
</section>

<div
    class="mx-auto  flex items-center justify-center chat-container fixed right-0 sm:right-3 -bottom-full transition-all duration-300 ease-in-out h-[482px] w-full sm:w-72">
    <div class="w-full h-full bg-white shadow-lg rounded-lg overflow-hidden flex flex-col relative">
        <span class="absolute top-1 right-1 cursor-pointer" id="x_mark">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                stroke="currentColor" class="size-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
            </svg>
        </span>
        <!-- Header -->
        <div class="bg-green-600 text-white p-4 flex items-center">
            <div class="w-10 h-10 bg-gray-300 rounded-full mr-4 text-center flex items-center justify-center">
                <%= userDetails.fname[0] + userDetails.lname[0] %>
            </div>
            <div>
                <h2 class="text-lg font-semibold">
                    <%= userDetails.fname + ' ' + userDetails.lname %>
                </h2>
                <p class="text-sm" id="login_status">
                    <%= userDetails.isLogin===1 ? 'online' : 'offline' %>
                </p>
            </div>
        </div>
        <!-- Chat Area -->
        <div class="flex-1 p-4 overflow-y-auto" id="chat-con">
            
        </div>
        <!-- Input Area -->
        <div class="border-t border-gray-200 p-4 flex items-center bg-white">
            <input type="text" placeholder="Type a message"
                class="flex-1 p-2 h-12 min-h-[2.5rem] max-h-[5rem] w-72 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                id="content_field" required>
            <button class="ml-4 p-2 bg-green-600 text-white rounded-full" onclick="sendMessage()">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M14.752 11.168l-7.72 4.05a.6.6 0 01-.86-.634l1.146-4.585-4.295-3.37a.6.6 0 01.33-1.054l4.824-.413L10.6 2.58a.6.6 0 011.092 0l2.053 4.86 4.824.413a.6.6 0 01.33 1.054l-4.295 3.37 1.146 4.585a.6.6 0 01-.86.634l-7.72-4.05z">
                    </path>
                </svg>
            </button>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="items-center justify-center h-screen w-full hidden fixed top-0 bottom-0" id="total_follower_modal">
    <div class="bg-white w-96 rounded-lg shadow-lg p-4">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-bold">Followers</h2>
            <button class="text-gray-600" onclick="closeModal()">&times;</button>
        </div>

        <div class="mb-4">
            <input type="text" placeholder="Search"
                class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring focus:ring-blue-200">
        </div>

        <div class="overflow-y-auto h-full sm:h-64">
            <div class="flex flex-col justify-center items-center">

                <% totalFollowers.forEach(follower=> { %>
                    <div class="flex items-center justify-between py-2 border-b w-full">
                        <div class="flex items-center space-x-5">
                            <a
                                class="h-10 w-10 sm:h-12 sm:w-12 rounded-full bg-red-600 flex items-center justify-center text-white">
                                <%= follower.User.fname.charAt(0).toUpperCase() +
                                    follower.User.lname.charAt(0).toUpperCase() %>
                            </a>
                            <div>
                                <p class="font-bold user_name" >
                                    <%= follower.User.username %>
                                </p>
                                <p class="text-sm text-gray-500">
                                    no bio
                                </p>
                            </div>
                        </div>
                        <% if(cookies.user_name!=follower.User.username){%>
                        <button type="submit"
                        class="px-4 py-2 bg-blue-500 text-white rounded-full follow_list"><% if (currentUserFollowing.some(f=> f.Follower.username === follower.User.username)) { %>Following<% } else { %>Follow<% } %></button><%}%>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>
</div>


<div class="items-center justify-center h-screen w-full hidden fixed top-0 bottom-0" id="total_following_modal">
    <div class="bg-white w-96 rounded-lg shadow-lg p-4">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-bold">Following</h2>
            <button class="text-gray-600" onclick="closeFollowingModal()">&times;</button>
        </div>

        <div class="mb-4">
            <input type="text" placeholder="Search"
                class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring focus:ring-blue-200">
        </div>

        <div class="overflow-y-auto h-full sm:h-64">
            <div class="flex flex-col justify-center items-center">

                <% totalFollowing.forEach(following=> { %>
                    <div class="flex items-center justify-between py-2 border-b w-full">
                        <div class="flex items-center space-x-5">
                            <a
                                class="h-10 w-10 sm:h-12 sm:w-12 rounded-full bg-red-600 flex items-center justify-center text-white">
                                <%= following.Follower.fname.charAt(0).toUpperCase() +
                                    following.Follower.lname.charAt(0).toUpperCase() %>
                            </a>
                            <div>
                                <p class="font-bold user_name" >
                                    <%= following.Follower.username %>
                                </p>
                                <p class="text-sm text-gray-500">
                                    no bio
                                </p>
                            </div>
                        </div>
                        <% if(cookies.user_name!=following.Follower.username){%>
                    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-full follow_list">
                        <% if (currentUserFollowing.some(f=> f.Follower.username === following.Follower.username)) { %>
                            Following
                            <% } else { %>
                                Follow
                                <% } %>
                    </button><%}%>
                    </div>
                    <% }); %>

            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io({
        auth: {
            token: '<%= cookies.user_id%>'
        }
    });
    socket.on('UserLoggedIn',()=>{
        document.getElementById('login_status').innerHTML='online'
    })
    socket.on('UserLoggedOut', () => {
            document.getElementById('login_status').innerHTML = 'offline'
    })
</script>

<script>
        function toggleReadMore(blogId) {
            const desc = document.getElementById('desc-' + blogId);
            const toggle = document.getElementById('toggle-' + blogId);

            if (desc.classList.contains('truncate-text')) {
                desc.classList.remove('truncate-text');
                toggle.textContent = 'Read Less';
            } else {
                desc.classList.add('truncate-text');
                toggle.textContent = 'Read More';
            }
        }
        let follow = document.getElementById('follow');
        follow.addEventListener('click', async (event) => {
            event.preventDefault();

        try {
            let username = document.getElementById('username').innerText;
            let total_followers = document.getElementById('total_followers');

            if (follow.innerText === 'Following') {
                console.log("Hiii");
                let response = await axios.post('/follow/remove-folllower', {}, {
                    headers: {
                        'username': username
                    }
                });
                if (response.data.message === true) {
                    alert('Successfully unfollow the user');
                    follow.innerText = 'Follow';
                    total_followers.innerText = Number(total_followers.innerText) - 1;
                }
                else {
                    window.location.href = '/user/login'
                }
            }
            else {
                let response = await axios.post('/follow/add-folllower', {}, {
                    headers: {
                        'username': username
                    }
                });
                console.log(response);
                if (response.data.message === true) {
                    alert('Successfully followed the user');
                    follow.innerText = 'Following';
                    total_followers.innerText = Number(total_followers.innerText) + 1;
                }
                else {
                    window.location.href = '/user/login'
                }
            }
        } catch (error) {
            console.error(error);
            alert('Error following the user');
        }
    });


    function toggleMenu(event, id) {
            event.stopPropagation();
            const menu = document.getElementById(`menu-${id}`);
            if (menu.classList.contains('hidden')) {
                document.querySelectorAll('[id^=menu-]').forEach(el => el.classList.add('hidden'));
                menu.classList.remove('hidden');
            } else {
                menu.classList.add('hidden');
            }
        }

        document.addEventListener('click', function () {
            document.querySelectorAll('[id^=menu-]').forEach(el => el.classList.add('hidden'));
        });

       
        async function deleteBlog(id,event) {
            let conf=confirm('Are you confirm to delete');
            if(!conf){
                return;
            }
            
            let response = await axios.post('/blog/delete-blog', {}, {
                headers: {
                    id: id
                }
            });
            if(response.data.message){
                event.target.closest('.main-blog').remove();
                let post_count=document.getElementById("#post_count");
                post_count.innerText=Number(post_count.innerText)-1+'';
            }
        }
</script>

<script>
    function openModal(event) {
        event.preventDefault();
        const followers_count_modal = document.getElementById('total_follower_modal');
        followers_count_modal.classList.add('flex');
        followers_count_modal.classList.remove('hidden');
    }

    function closeModal() {
        const followers_count_modal = document.getElementById('total_follower_modal');
        followers_count_modal.classList.remove('flex');
        followers_count_modal.classList.add('hidden');
    }

    function openFollowingModal(event) {
        event.preventDefault();
        const followers_count_modal = document.getElementById('total_following_modal');
        followers_count_modal.classList.add('flex');
        followers_count_modal.classList.remove('hidden');
    }

    function closeFollowingModal() {
        const followers_count_modal = document.getElementById('total_following_modal');
        followers_count_modal.classList.remove('flex');
        followers_count_modal.classList.add('hidden');
    }

</script>

<script>
    let followList=document.querySelectorAll('.follow_list');
    followList.forEach((follow)=>{
        follow.addEventListener('click',async()=>{
            try {
                let user_name = follow.parentElement.querySelector('.user_name');
                if (follow.innerText === 'Following') {
    
                    let response = await axios.post('/follow/remove-folllower', {}, {
                        headers: {
                            'username': user_name.innerText
                        }
                    });
                    if (response.data.message === true) {
                        alert('Successfully unfollow the user');
                        follow.innerText = 'Follow';
                    }
                    else {
                        window.location.href = '/user/login'
                    }
                }
                else {
                    let response = await axios.post('/follow/add-folllower', {}, {
                        headers: {
                            'username': user_name.innerText
                        }
                    });
                    if (response.data.message === true) {
                        alert('Successfully followed the user');
                        follow.innerText = 'Following';
                    }
                    else {
                        window.location.href = '/user/login'
                    }
                }
            } catch (error) {
                console.log(error);
            }
        })
    })
</script>



<script>
    let message=document.getElementById('message');
    let x_mark=document.getElementById('x_mark');
    
    let chat_container=document.querySelector('.chat-container');
    message.addEventListener('click',(event)=>{
        if(chat_container.classList.contains('-bottom-full')){
            chat_container.classList.remove('-bottom-full');
            chat_container.classList.add('bottom-0');
        }
        else{
            chat_container.classList.add('-bottom-full');
            chat_container.classList.remove('bottom-0');
        }
    })

    x_mark.addEventListener('click', (event) => {
            if (chat_container.classList.contains('-bottom-full')) {
                chat_container.classList.remove('-bottom-full');
                chat_container.classList.add('bottom-0');
            }
            else {
                chat_container.classList.add('-bottom-full');
                chat_container.classList.remove('bottom-0');
            }
        })

        function getCurrentTime() {
                const now = new Date();
                let hours = now.getHours();
                const minutes = now.getMinutes();
                const ampm = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12;
                hours = hours ? hours : 12; // the hour '0' should be '12'
                const minutesStr = minutes < 10 ? '0' + minutes : minutes;
                const strTime = hours + ':' + minutesStr + ' ' + ampm;
                return strTime;
            }

        async function sendMessage(){
                
                let timeSpan= getCurrentTime();
                let username=document.getElementById('username').innerText;
                let content=document.getElementById('content_field').value;
                if(content===''){
                    return;
                }
                let message_details={username:username,content:content};
                socket.emit('message', message_details);
                let chat_con = document.getElementById('chat-con');
                const outerDiv = document.createElement('div');
                outerDiv.classList.add('flex', 'items-start', 'justify-end', 'mb-4');
                const innerDiv = document.createElement('div');
                innerDiv.classList.add('bg-green-200', 'p-2', 'rounded-lg', 'shadow');
                const messageParagraph = document.createElement('p');
                messageParagraph.classList.add('text-sm');
                messageParagraph.textContent = content;
                const timestampSpan = document.createElement('span');
                timestampSpan.classList.add('text-xs', 'text-gray-500');
                timestampSpan.textContent = timeSpan;

                innerDiv.appendChild(messageParagraph);
                innerDiv.appendChild(timestampSpan);
                outerDiv.appendChild(innerDiv);
                chat_con.appendChild(outerDiv);
                document.getElementById('content_field').value = '';
            }
        async function getAllMessage() {
            try {
                let chat_container = document.getElementById('chat-con');
                let username = document.getElementById('username').innerText.trim();
                let response = await axios.get('/message/get-all-messages', {
                    headers: {
                        'username': username
                         }
                    });
                if (response.data.message === true) {
                    let message_details = response.data.all_messages;
                    message_details.forEach((message)=>{
                    if(message.Sender.username===username){
                        let messageContainer=createIncominggMessageElement(message.content,message.Sender, message.createdAt);
                            chat_container.appendChild(messageContainer);
                        }
                        else{
                            let messageContainer =  createOutgoingMessageElement(message.content,message.createdAt);
                            chat_container.appendChild(messageContainer);
                        }
                    })
                    
                            
                }
                else{
                     window.location.href='/user/login';
                }
            } catch (error) {
                console.error('Error fetching messages:', error);
            }
        }
         getAllMessage();
         
        function createIncominggMessageElement(message, Sender, createdAt) {
                const messageContainer = document.createElement('div');
                messageContainer.classList.add('flex', 'items-start', 'mb-4','outgoing');
                messageContainer.setAttribute('time',createdAt);
                const userIconContainer = document.createElement('div');
                userIconContainer.classList.add('mr-4', 'w-10', 'h-10', 'bg-gray-300', 'rounded-full', 'flex', 'justify-center', 'items-center', 'p-2');
                userIconContainer.textContent = Sender.fname[0] + '' + Sender.lname[0];
                const messageContentContainer = document.createElement('div');
                messageContentContainer.classList.add('bg-white', 'p-2', 'rounded-lg', 'shadow');
                const messageContent = document.createElement('p');
                messageContent.classList.add('text-sm');
                messageContent.textContent = message;
                const messageTimestamp = document.createElement('span');
                messageTimestamp.classList.add('text-xs', 'text-gray-500');
                messageTimestamp.textContent = new Date(createdAt).toLocaleString();
                messageContentContainer.appendChild(messageContent);
                messageContentContainer.appendChild(messageTimestamp);
                messageContainer.appendChild(userIconContainer);
                messageContainer.appendChild(messageContentContainer);
                return messageContainer;
            }
        function createOutgoingMessageElement(message, createdAt) {
                const messageContainer = document.createElement('div');
                messageContainer.classList.add('flex', 'items-start', 'justify-end', 'mb-4');
                const messageContentContainer = document.createElement('div');
                messageContentContainer.classList.add('bg-green-200', 'p-2', 'rounded-lg', 'shadow');
                const messageContent = document.createElement('p');
                messageContent.classList.add('text-sm');
                messageContent.textContent = message;
                const messageTimestamp = document.createElement('span');
                messageTimestamp.classList.add('text-xs', 'text-gray-500');
                messageTimestamp.textContent = new Date(createdAt).toLocaleString();
                messageContentContainer.appendChild(messageContent);
                messageContentContainer.appendChild(messageTimestamp);
                messageContainer.appendChild(messageContentContainer);
                return messageContainer;
            }

        socket.on('message_added',(data)=>{
            let username= '<%=cookies.user_name%>';
            if(username===data.receiver){
                newMessage(data);
            }
            
        })
        async function newMessage(data){
           let fname=data.fname;
           let lanem=data.lname;
            let username = document.getElementById('username').innerText.trim();
            let messageContainer= createIncominggMessageElement(data.content,data.sender, data.timeStamp);
            let chat_container = document.getElementById('chat-con');
            chat_container.appendChild(messageContainer);
        }
        
</script>
<%- include('includes/footer') %>
